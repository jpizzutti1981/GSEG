"""
Django settings for gestao_ocorrencias project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--ofvqqt+_apiq^)pv@1ra3m-2+74f1(iqgv72w2d)y@dodgak1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    'ocorrencias',
    'notificacoes',
    'controle_chaves',   
    ]

MIDDLEWARE = [
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'  # üî• Garante o armazenamento correto

CSRF_TRUSTED_ORIGINS = [
    "http://127.0.0.1",
    "http://localhost",
]

ROOT_URLCONF = 'gestao_ocorrencias.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'gestao_ocorrencias.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'GSEG',  # Nome do banco que voc√™ criou
        'USER': 'postgres',
        'PASSWORD': '07062004',  # Sua senha do PostgreSQL
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = "America/Sao_Paulo" 

LANGUAGES = [
    ('pt-br', 'Portugu√™s'),
    ('en', 'English'),
    # ...
]

LANGUAGE_CODE = 'pt-br'
USE_I18N = True
USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

import os
from pathlib import Path
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


STATIC_URL = '/static/'

import os
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = 'listar_ocorrencias'  # Redireciona para a listagem de ocorr√™ncias ap√≥s login
LOGOUT_REDIRECT_URL = 'login'  # Redireciona para a p√°gina de login ap√≥s logout

import os

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Configura√ß√£o para servir arquivos est√°ticos no Render
if 'RENDER' in os.environ:
    import dj_database_url
    DATABASES['default'] = dj_database_url.config(conn_max_age=600, ssl_require=True)

JAZZMIN_SETTINGS = {
    "site_title": "Admin SGSEG",
    "site_header": "Admin - Sistema Gest√£o Seguran√ßa",
    "welcome_sign": "Bem-vindo ao Sistema de Gest√£o de Seguran√ßa",
    "site_brand": "Admin SGSEG",
    "copyright": "¬© 2025 Pontal Shopping - Seguran√ßa",
    "search_model": "ocorrencias.Ocorrencia",
    "show_sidebar": True,
    "show_ui_builder": False,  # Oculta o bot√£o de personaliza√ß√£o UI do Jazzmin
    "site_logo": "images/logo.png",  # Se quiser adicionar um logo
    "site_icon": "images/favicon.ico",  # √çcone do site no navegador (se tiver)
    "hide_apps": "admin_interface",
    "recent_actions": False, 
    "custom_css": "css/admin_custom.css",
    "custom_js": "js/admin_custom.js", 
    
    # üìå Personalizar os links do menu superior
    "topmenu_links": [
        {"name": "Dashboard", "url": "dashboard", "permissions": ["ocorrencias.view_ocorrencia"]},
        {"name": "Sinopse", "url": "sinopse"},
        {"name": "Ocorr√™ncias", "url": "listar_ocorrencias"},
        {"name": "Automa√ß√£o", "url": "automacao"},
    ],
    
    # üìå Ajustar o menu lateral
    "side_menu": [
        {"app": "auth", "label": "üîê Autentica√ß√£o", "models": ["user", "group"]},  # Usu√°rios e grupos
        {"app": "controle_chaves", "label": "üîë Controle de Chaves", "models": [
            "chave", "movimentacaochave", "reciclagemvigilante", "documentofundamental"
        ]},
        {"app": "ocorrencias", "label": "‚ö†Ô∏è Gest√£o de Ocorr√™ncias", "models": [
            "ocorrencia", "sinopse", "atendimento"
        ]},
    ],


    # üìå Links no menu do usu√°rio
    "usermenu_links": [
        {"name": "Alterar Senha", "url": "admin:password_change", "icon": "fas fa-key"},
        {"name": "Sair", "url": "logout", "icon": "fas fa-sign-out-alt"},
    ],

    # üìå Ajuste de estilos
    "theme": "darkly",  # Temas dispon√≠veis: "cerulean", "cosmo", "cyborg", "darkly", "flatly", etc.
}

JAZZMIN_SETTINGS["hide_apps"] = ["admin_interface"]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'django_q_debug.log',
        },
    },
    'loggers': {
        'django_q': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

# Configura√ß√£o de E-mail no Django
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  
EMAIL_PORT = 587  # Para TLS, use 587. Se for SSL, troque para 465
EMAIL_USE_TLS = True  # Se usar SSL, troque para False
EMAIL_USE_SSL = False  # Deixe False se EMAIL_USE_TLS estiver True
EMAIL_HOST_USER = "jpizzutti.jp@gmail.com"  # Seu e-mail
EMAIL_HOST_PASSWORD = "rqutdexewlhlzfgx"  # Senha de aplicativo gerada pelo Google
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER  # Define o e-mail de envio padr√£o

import os

LOCALE_PATHS = [
    os.path.join(BASE_DIR, "locale"),
]

LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/listar_ocorrencias/'
LOGOUT_REDIRECT_URL = '/accounts/login/'

import os
from dotenv import load_dotenv

# Carregar vari√°veis do .env
load_dotenv()

# Definir a vari√°vel da API Key
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# Verificar se a chave foi carregada corretamente
if not OPENAI_API_KEY:
    raise ValueError("‚ö†Ô∏è OPENAI_API_KEY n√£o foi definida! Verifique o arquivo .env")

TELEGRAM_BOT_TOKEN = "7829657282:AAF85EKDwYtJE-XE27C2O2yxf4OoZR7-aiY"
TELEGRAM_CHAT_ID = "-1002331581799"

import os
from dotenv import load_dotenv

# Carregar vari√°veis do arquivo .env
load_dotenv()

# Configura√ß√£o do Cloudinary
CLOUDINARY_STORAGE = {
    'CLOUD_NAME': os.getenv('CLOUDINARY_CLOUD_NAME'),
    'API_KEY': os.getenv('CLOUDINARY_API_KEY'),
    'API_SECRET': os.getenv('CLOUDINARY_API_SECRET'),
}

DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'neondb',  # Nome do banco no Neon
        'USER': 'neondb_owner',  
        'PASSWORD': 'npg_UZf1CruVdH7j',  
        'HOST': 'ep-dark-violet-a8kma56m-pooler.eastus2.azure.neon.tech',  
        'PORT': '5432',  
        'OPTIONS': {'sslmode': 'require'},  # üîπ Importante para Neon
    }
}
